<!DOCTYPE html>
<html lang="ar">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>ุญุจู ุงููู</title>
  <script src="https://cdn.jsdelivr.net/npm/react@18.2.0/umd/react.production.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/react-dom@18.2.0/umd/react-dom.production.min.js"></script>
  <script src="https://cdn.jsdelivr.net/npm/babel-standalone@7.22.5/babel.min.js"></script>
  <script src="https://cdn.tailwindcss.com"></script>
  <style>
    body { font-family: 'Amiri', serif; direction: rtl; text-align: right; background-color: #f8f9fa; }
    .verse { font-size: 1.5rem; font-weight: bold; color: #1a3c34; }
    .tadabbur { font-size: 1rem; color: #4b5e4a; }
    .secret-mode { background-color: #e5e7eb; color: #4b5e4a; }
  </style>
</head>
<body>
  <div id="root"></div>
  <script type="text/babel">
    const { useState, useEffect } = React;

    // ุจูุงูุงุช ุงููุฑุขู ูุงูุฃุฏุนูุฉ
    const quranData = {
      surahs: [
        {
          id: 1,
          name: "ุงููุจุฃ",
          verses: [
            { 
              id: 1, 
              text: "ุนูููู ููุชูุณูุงุกูููููู", 
              tadabbur: "ุชุจุฏุฃ ุงูุณูุฑุฉ ุจุณุคุงู ูููุธ ุงูููุจ... ูุง ุงูุฐู ูุฌุนู ุงููุงุณ ุชุชุณุงุกูุ ุฅููุง ูุญุธุฉ ุชููุฆุฉ ููุฎุจุฑ ุงูุนุธูู.", 
              tadabburDeep: "ุชูุฑุงุฑ ุงูุณุคุงู ูุฏู ุนูู ูุฒุน ุงููุนูู... ูุฃูู ูููุง ูููุช ุดูุฆูุงุ ููู ูู: ุจู ููุณ ุจุนุฏ!", 
              audio: "tadabbur_1.mp3", 
              recitation: "verse_1.mp3" 
            },
            { 
              id: 2, 
              text: "ุนููู ุงููููุจูุฅู ุงููุนูุธูููู", 
              tadabbur: "ุงููุจุฃ ุงูุนุธูู... ุฎุจุฑ ููุฒ ุงููููุจุ ููู ุฃูุช ูุณุชุนุฏ ูุณูุงุนูุ", 
              tadabburDeep: "ุงููุจุฃ ูุนุธู ูู ุงูููุจ ูููุง ุงูุชุฑุจุช ููู... ูู ูุงุญุธุช ุนุธูุฉ ุงููุญูุ", 
              audio: "tadabbur_2.mp3", 
              recitation: "verse_2.mp3" 
            },
            { 
              id: 3, 
              text: "ุงูููุฐูู ูููู ููููู ููุฎูุชูููููููู", 
              tadabbur: "ุงุฎุชูุงู ุงููุงุณ ุญูู ุงููุจุฃ ูุฏุนูู ููุชุฃูู... ูู ููุจู ูุน ุงูุญูุ", 
              tadabburDeep: "ุงูุงุฎุชูุงู ููุง ูุนูุณ ุทุจุงุน ุงูุจุดุฑ... ููู ุงูุญู ูุงุญุฏ ูุง ูุชุบูุฑ.", 
              audio: "tadabbur_3.mp3", 
              recitation: "verse_3.mp3" 
            }
          ],
          conceptMap: `<svg width="300" height="150"><rect x="10" y="10" width="280" height="130" fill="#d1fae5" /><text x="50" y="50" fill="#1a3c34">ููุงููู ุณูุฑุฉ ุงููุจุฃ</text><circle cx="150" cy="80" r="20" fill="#34d399" /><text x="140" y="85" fill="#1a3c34">ุงูุณุคุงู</text></svg>`
        },
        {
          id: 2,
          name: "ุงููุงุฒุนุงุช",
          verses: [
            { 
              id: 1, 
              text: "ููุงููููุงุฒูุนูุงุชู ุบูุฑูููุง", 
              tadabbur: "ุตูุฑุฉ ุญุฑููุฉ ุชููุฃ ุงูููุจ ุฑูุจุฉ... ูู ุชุฎููุช ููุฉ ุงูููุงุฆูุฉ ุงููุงุฒุนุงุชุ", 
              tadabburDeep: "ุงูุบุฑู ููุง ููุณ ุจุงููุงุกุ ุจู ุจุงูุชุฒุงุน ุงูุฃุฑูุงุญ... ุชุฃูู ููุชูุง!", 
              audio: "tadabbur_4.mp3", 
              recitation: "verse_4.mp3" 
            },
            { 
              id: 2, 
              text: "ููุงููููุงุดูุทูุงุชู ููุดูุทูุง", 
              tadabbur: "ุงููุดุงุท ููุง ูุญูู ูุนูู ุงูุญูุงุฉ... ุชุฃูู ููู ุชุชุญุฑู ุงูููุงุฆูุฉ!", 
              tadabburDeep: "ุงููุดุท ููุณ ูุฌุฑุฏ ุญุฑูุฉุ ุจู ุนุฒููุฉ ูุง ุชูุฏุฃ... ูู ููุจู ูุดูุท ููุญูุ", 
              audio: "tadabbur_5.mp3", 
              recitation: "verse_5.mp3" 
            }
          ],
          conceptMap: `<svg width="300" height="150"><rect x="10" y="10" width="280" height="130" fill="#d1fae5" /><text x="50" y="50" fill="#1a3c34">ููุงููู ุณูุฑุฉ ุงููุงุฒุนุงุช</text></svg>`
        }
      ]
    };

    const adkarData = [
      { id: 1, text: "ุงูููู ุฃูุช ุฑุจู ูุง ุฅูู ุฅูุง ุฃูุช", category: "ุงูุตุจุงุญ", source: "ุตุญูุญ ุงูุจุฎุงุฑู" },
      { id: 2, text: "ุฃุนูุฐ ุจุงููู ูู ุงูุดูุทุงู ุงูุฑุฌูู", category: "ุงูุญูุงูุฉ", source: "ุงููุฑุขู ุงููุฑูู" },
      { id: 3, text: "ุงูุญูุฏ ููู ุงูุฐู ุฃุญูุงูุง ุจุนุฏ ูุง ุฃูุงุชูุง", category: "ุงูุตุจุงุญ", source: "ุตุญูุญ ูุณูู" },
      { id: 4, text: "ุงูููู ุฅูู ุฃุณุฃูู ุงูุนุงููุฉ ูู ุงูุฏููุง ูุงูุขุฎุฑุฉ", category: "ุงููุฑุฌ", source: "ุณูู ุงุจู ูุงุฌู" },
      { id: 5, text: "ุฑุจ ุงุบูุฑ ูู ูููุงูุฏู", category: "ุงูุงุณุชุบูุงุฑ", source: "ุงููุฑุขู ุงููุฑูู" },
      // ุฅุถุงูุฉ 94 ุฏุนุงุกู ุฅุถุงูููุง (ูุซุงู ูุฎุชุตุฑ)
      ...Array.from({ length: 94 }, (_, i) => ({
        id: i + 6,
        text: `ุฏุนุงุก ููุซูู ุฑูู ${i + 6}`,
        category: ["ุงูุตุจุงุญ", "ุงููุณุงุก", "ุงูุญูุงูุฉ", "ุงูุณูุฑ", "ุงููุฑุฌ", "ุงูุงุณุชุบูุงุฑ"][Math.floor(Math.random() * 6)],
        source: "ูุตุฏุฑ ููุซูู"
      }))
    ];

    // ูููู ุดุงุดุฉ ุงูุชุฑุญูุจ
    const WelcomeScreen = ({ onStart }) => (
      <div className="min-h-screen flex flex-col items-center justify-center bg-gradient-to-b from-green-100 to-green-200">
        <h1 className="text-4xl font-bold text-green-800 mb-4">ุญุจู ุงููู</h1>
        <p className="text-lg text-center text-gray-700 mb-6">
          "ุฃูููุง ูุง ุนุจุฏ ุงูููุ ูุฐู ุฑุญูุชู ูู ุญุจู ุงููู... ูู ุขูุฉ ุจุงุจุ ููู ุชุฃูู ููุชุงุญ."<br />
          "ูุฑุขูู ูุด ูุญุชุงุฌ ุชูุณูุฑ... ุฏุง ููุฑ ูุจูู ูููุงุณุ ุฏุง ุงูุช ุงููู ูู ุญูู ููุตุฑ..."
        </p>
        <p className="text-sm text-gray-600 mb-4">ุจููู: ุนุจุฏ ุงููู ุจู ุนุจุฏ ุงููู โ ูุงูู ุงูุชุทุจูู</p>
        <button
          className="px-6 py-3 bg-green-600 text-white rounded-lg hover:bg-green-700"
          onClick={onStart}
        >
          ุงุจุฏุฃ ุงูุฑุญูุฉ
        </button>
      </div>
    );

    // ูููู ุนุฑุถ ุงูุขูุงุช
    const VerseScreen = ({ surah, onBack }) => {
      const [selectedVerse, setSelectedVerse] = useState(null);
      const [showConceptMap, setShowConceptMap] = useState(false);
      const [achievements, setAchievements] = useState([]);

      const addAchievement = (verseId) => {
        if (!achievements.includes(verseId)) {
          setAchievements([...achievements, verseId]);
          alert("ูุจุฑูู! ููุฏ ูุชุญุช ููุฒูุง ุฌุฏูุฏูุง ูู ุฑุญูุชู!");
        }
      };

      return (
        <div className="p-4">
          <button className="mb-4 text-green-600" onClick={onBack}>ุฑุฌูุน</button>
          <h2 className="text-2xl font-bold text-green-800 mb-4">{surah.name}</h2>
          <button
            className="mb-4 px-4 py-2 bg-blue-500 text-white rounded"
            onClick={() => setShowConceptMap(!showConceptMap)}
          >
            {showConceptMap ? "ุฅุฎูุงุก ุฎุฑูุทุฉ ุงูููุงููู" : "ุนุฑุถ ุฎุฑูุทุฉ ุงูููุงููู"}
          </button>
          {showConceptMap && (
            <div dangerouslySetInnerHTML={{ __html: surah.conceptMap }} className="mb-4"></div>
          )}
          {surah.verses.map(verse => (
            <div key={verse.id} className="mb-4 p-4 bg-white rounded-lg shadow">
              <p className="verse">{verse.text}</p>
              <button
                className="mt-2 mr-2 px-4 py-2 bg-green-500 text-white rounded"
                onClick={() => setSelectedVerse(verse)}
              >
                โจ ุชุฃูู
              </button>
              <button className="mt-2 mr-2 px-4 py-2 bg-blue-500 text-white rounded">
                ๐ ุงุณุชูุน ุจุชุฑุชูู
              </button>
              <button
                className="mt-2 px-4 py-2 bg-yellow-500 text-white rounded"
                onClick={() => addAchievement(verse.id)}
              >
                ๐ ุฅูุฌุงุฒ
              </button>
              {selectedVerse && selectedVerse.id === verse.id && (
                <div className="tadabbur mt-2">
                  <p>{verse.tadabbur}</p>
                  {verse.tadabburDeep && (
                    <>
                      <p className="font-bold mt-2">ุชุฃูู ุฃุนูู:</p>
                      <p>{verse.tadabburDeep}</p>
                    </>
                  )}
                </div>
              )}
            </div>
          ))}
        </div>
      );
    };

    // ูููู ุงูุฃุฏุนูุฉ
    const AdkarScreen = ({ onBack }) => {
      const [category, setCategory] = useState("ุงููู");
      const categories = ["ุงููู", ...new Set(adkarData.map(dua => dua.category))];

      return (
        <div className="p-4">
          <button className="mb-4 text-green-600" onClick={onBack}>ุฑุฌูุน</button>
          <h2 className="text-2xl font-bold text-green-800 mb-4">ุงูุฃุฏุนูุฉ ุงูููุซููุฉ</h2>
          <div className="mb-4">
            <label className="ml-2">ุงุฎุชุฑ ุงูุชุตููู:</label>
            <select
              className="p-2 border rounded"
              value={category}
              onChange={e => setCategory(e.target.value)}
            >
              {categories.map(cat => (
                <option key={cat} value={cat}>{cat}</option>
              ))}
            </select>
          </div>
          {adkarData
            .filter(dua => category === "ุงููู" || dua.category === category)
            .map(dua => (
              <div key={dua.id} className="mb-4 p-4 bg-white rounded-lg shadow">
                <p>{dua.text}</p>
                <p className="text-sm text-gray-600">ุงูุชุตููู: {dua.category} | ุงููุตุฏุฑ: {dua.source}</p>
              </div>
            ))}
        </div>
      );
    };

    // ูููู ุงูุชุทุจูู ุงูุฑุฆูุณู
    const App = () => {
      const [screen, setScreen] = useState("welcome");
      const [secretMode, setSecretMode] = useState(false);

      return (
        <div className={secretMode ? "secret-mode min-h-screen" : "min-h-screen"}>
          <button
            className="fixed top-4